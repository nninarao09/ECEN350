$date
	Mon Nov  9 11:38:28 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module NextPClogicTest $end
$var wire 64 ! NextPC [63:0] $end
$var reg 1 " ALUZero $end
$var reg 1 # Branch $end
$var reg 64 $ CurrentPC [63:0] $end
$var reg 64 % SignExtImm64 [63:0] $end
$var reg 1 & Uncondbranch $end
$var reg 64 ' newNextPC [63:0] $end
$var reg 4 ( passed [3:0] $end
$scope module uut $end
$var wire 1 " ALUZero $end
$var wire 1 # Branch $end
$var wire 64 ) CurrentPC [63:0] $end
$var wire 64 * SignExtImm64 [63:0] $end
$var wire 1 & Uncondbranch $end
$var reg 64 + NextPC [63:0] $end
$var reg 64 , temp [63:0] $end
$upscope $end
$scope task allPassed $end
$var reg 4 - numTests [3:0] $end
$var reg 4 . passed [3:0] $end
$upscope $end
$scope task passTest $end
$var reg 64 / actualOut [63:0] $end
$var reg 64 0 expectedOut [63:0] $end
$var reg 4 1 passed [3:0] $end
$var reg 257 2 testType [256:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 2
bx 1
bx 0
bx /
bx .
bx -
b0 ,
bx +
b0 *
b0 )
b0 (
bx '
0&
b0 %
b0 $
0#
0"
bx !
$end
#2000
b100 !
b100 +
#3000
b1010000 ,
b1011010 '
1&
b10100 %
b10100 *
b1010 $
b1010 )
#6000
b1011010 !
b1011010 +
#13000
b1000 ,
b11000 '
0&
1"
1#
b10 %
b10 *
b10000 $
b10000 )
b1 (
b1 1
b10101000110010101110011011101000010000000110001 2
b1011010 0
b1011010 /
#16000
b11000 !
b11000 +
#23000
b1100 ,
b10100 '
0"
b11 %
b11 *
b10 (
b10 1
b10101000110010101110011011101000010000000110010 2
b11000 0
b11000 /
#25000
b10100 !
b10100 +
#33000
b10000 ,
b100000 '
1&
0#
b100 %
b100 *
b11 (
b11 1
b10101000110010101110011011101000010000000110011 2
b10100 0
b10100 /
#36000
b100000 !
b100000 +
#43000
b100 -
b100 .
b100 (
b100 1
b10101000110010101110011011101000010000000110100 2
b100000 0
b100000 /
